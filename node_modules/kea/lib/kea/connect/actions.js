'use strict';

exports.__esModule = true;
exports.selectActionsFromLogic = selectActionsFromLogic;

var _mapping = require('./mapping');

function selectActionsFromLogic() {
  var mapping = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

  var _deconstructMapping = (0, _mapping.deconstructMapping)(mapping),
      actionsArray = _deconstructMapping.response,
      logics = _deconstructMapping.logics;

  if (!actionsArray) {
    return;
  }

  var hash = {};
  var meta = {};

  meta.withKeyCreator = false;
  meta.keyCreators = [];

  actionsArray.forEach(function (_ref) {
    var logic = _ref[0],
        from = _ref[1],
        to = _ref[2];

    var actions = logic && logic.actions ? logic.actions : logic;
    var keyCreator = logic && logic._keaKeyCreator && typeof logic._keaKeyCreator === 'function' ? logic._keaKeyCreator : null;

    if (typeof actions[from] === 'function') {
      hash[to] = actions[from];
      if (keyCreator) {
        hash[to]._keaKeyCreator = keyCreator;
      }
    } else {
      console.error('[KEA-LOGIC] action "' + from + '" missing for logic:', logic);
      console.trace();
    }
  });

  // add some metadata, especially if we're connecting a to dynamic logic store
  meta.withKeyCreator = false;
  meta.keyCreators = [];
  logics.forEach(function (logic) {
    var keyCreator = logic && logic._keaKeyCreator && typeof logic._keaKeyCreator === 'function' ? logic._keaKeyCreator : null;

    if (keyCreator) {
      meta.withKeyCreator = true;
      meta.keyCreators.push(keyCreator);
    }
  });

  return { actions: hash, meta: meta };
}